{"version":3,"sources":["components/Loading.js","components/SelectComponent.js","components/DeputadoCard.js","components/PieChart.js","components/PieDialog.js","components/DeputadoDetail.js","pages/Gov.js","pages/Sobre.js","components/TabPanel.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","Loading","classes","className","CircularProgress","select","margin","minWidth","SelectComponent","label","menuItems","value","setOnChange","FormControl","variant","InputLabel","id","Select","labelId","onChange","e","target","map","MenuItem","key","width","height","avatar","borderRadius","center","justifyContent","alignItems","marginBottom","DeputadoCard","email","nome","siglaPartido","siglaUf","setDeputadoId","urlFoto","Card","elevation","CardActionArea","CardContent","Avatar","alt","src","Typography","gutterBottom","component","color","href","CardActions","Button","size","onClick","Plot","gastos","fornecedores","Set","g","nomeFornecedor","gastosAgrupados","i","length","somatorio","temp","x","y","j","valorLiquido","String","toLocaleString","style","currency","push","colorScale","labels","fontSize","standlone","data","datum","PieDialog","isPlot","setIsPlot","escolhido","Dialog","fullScreen","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","appBar","position","title","flex","Transition","React","forwardRef","props","ref","Slide","direction","DeputadoDetail","deputadoId","deputados","useState","isLoading","setIsLoading","erro","setErro","setGastos","setEscolhido","a","deputadoIdUrl","fetch","then","response","json","dados","esc","filter","dep","catch","err","message","handleClose","useEffect","getGastosAPI","TransitionComponent","AppBar","Toolbar","autoFocus","Alert","severity","alert","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","codDocumento","dataDocumento","cnpjCpfFornecedor","tipoDespesa","tipoDocumento","Link","urlDocumento","rel","valorDocumento","valorGlosa","formControl","flexWrap","Gov","uf","setUf","sigla","setSigla","setDeputados","lista","setLista","currentPage","setCurrentPage","partidos","setPartidos","updateListagem","values","dado","partsUrl","localStorage","setItem","JSON","stringify","subData","d","depsLocal","parse","getItem","partsLocal","getDadosGovAPI","subDados","slice","Pagination","defaultPage","count","Math","ceil","event","page","Sobre","TabPanel","children","index","other","role","hidden","Container","Box","a11yProps","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","App","temaDark","setTemaDark","check","setCheck","tipoPaleta","corPrimaria","orange","blue","corSecundaria","deepOrange","lightBlue","tema","createMuiTheme","type","primary","main","secondary","responsiveFontSizes","FormGroup","FormControlLabel","control","Switch","checked","inputProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b6de9f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\nexport default function SelectComponent({ label, menuItems, value, setOnChange }){\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={classes.select}>\r\n        <InputLabel id={label}>{label}</InputLabel>\r\n        <Select\r\n            labelId={label}\r\n            id={label}\r\n            value={value}\r\n            onChange={e => setOnChange(e.target.value)}\r\n            label={label}\r\n        >\r\n            {menuItems.map(e => <MenuItem key={e} value={e}>{e}</MenuItem>)}\r\n        </Select>\r\n    </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Avatar, Card, CardActionArea, CardActions, CardContent, Button, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 250,\r\n    height: 300,\r\n  },\r\n  avatar: {\r\n    borderRadius: '50%',\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n}))\r\n\r\nexport default function DeputadoCard({ id, email, nome, siglaPartido, siglaUf, setDeputadoId, urlFoto }) {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card elevation={3} className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <div className={classes.center}>\r\n            <Avatar alt={nome} src={urlFoto} className={classes.avatar} />\r\n          </div>\r\n          <Typography gutterBottom variant=\"h6\" component=\"p\">{nome}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Partido: {siglaPartido}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Estado: {siglaUf}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"a\" href={`mailto:${email}`}>E-mail</Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={() => setDeputadoId(id)}>Cota parlamentar</Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { VictoryPie } from \"victory\"\r\n\r\nexport default function Plot({ gastos }) {\r\n\r\n    const fornecedores = [...new Set(gastos.map(g => g.nomeFornecedor))] // valores únicos, sem repetição\r\n    const gastosAgrupados = []\r\n\r\n    for (let i = 0; i < fornecedores.length; i++) { // para cada fornecedor\r\n        var somatorio = 0 // zera os gastos para o fornecedor\r\n        var temp = { x: '', y: 0 }\r\n        for (let j = 0; j < gastos.length; j++) { // para cada gasto\r\n            if (gastos[j].nomeFornecedor === fornecedores[i]) { // se gasto for do fornecedor atual\r\n                somatorio += gastos[j].valorLiquido // soma gasto\r\n            }\r\n        }\r\n        temp.x = String(fornecedores[i])\r\n        temp.y = somatorio.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})\r\n        gastosAgrupados.push(temp)\r\n    }\r\n\r\n    return (\r\n        <VictoryPie\r\n            height={200}\r\n            width={300}\r\n            colorScale=\"qualitative\"\r\n            style={{ labels: { fontSize: 5 } }}\r\n            standlone={false}\r\n\r\n            data={gastosAgrupados}\r\n            labels={({ datum }) => `${datum.x}: ${datum.y}`}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport PieChart from './PieChart'\r\n\r\nexport default function PieDialog({ gastos, isPlot, setIsPlot, escolhido }) {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen={true}\r\n                open={isPlot}\r\n                onClose={() => setIsPlot(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {escolhido.nome} ({escolhido.siglaUf}) - {escolhido.siglaPartido}\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <PieChart gastos={gastos} />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setIsPlot(false)} color=\"primary\">\r\n                        <CloseIcon /> Fechar\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, Dialog, AppBar, Toolbar, Typography, Slide, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper, Link, Avatar } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport PieDialog from './PieDialog'\r\nimport Loading from './Loading'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    avatar: {\r\n        borderRadius: '50%',\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function DeputadoDetail({ deputadoId, setDeputadoId, deputados }) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [erro, setErro] = useState('')\r\n    const [gastos, setGastos] = useState([])\r\n    const [escolhido, setEscolhido] = useState('')\r\n    const [isPlot, setIsPlot] = useState(false)\r\n\r\n    useEffect(() => { // executa busca na api sempre que deputadoId mudar\r\n\r\n        getGastosAPI(deputadoId)\r\n\r\n    }, [deputadoId])\r\n\r\n    async function getGastosAPI(deputadoId) { // busca os gastos do deputadoId\r\n\r\n        if (deputadoId === '') {\r\n            return\r\n        }\r\n        else {\r\n\r\n            setIsLoading(true)\r\n            setErro('')\r\n\r\n            let anos = `ano=2020` //&ano=2019&ano=2018&ano=2017\r\n            let deputadoIdUrl = `https://dadosabertos.camara.leg.br/api/v2/deputados/${deputadoId}/despesas?${anos}&ordem=DESC&ordenarPor=ano`\r\n\r\n            await fetch(deputadoIdUrl)\r\n                .then(async response => {\r\n                    await response.json().then(data => {\r\n                        setGastos(data.dados) // gastos do deputadoId\r\n                        let esc = deputados.filter(dep => dep.id === deputadoId)[0] // deputadoId em questão\r\n                        setEscolhido(esc)\r\n                    })\r\n                })\r\n                .catch(function (err) { setErro(err.message) })\r\n\r\n            setIsLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function handleClose() { // limpa\r\n\r\n        setDeputadoId('')\r\n        setEscolhido('')\r\n\r\n    }\r\n\r\n    function showPie(){\r\n        setIsPlot(!isPlot)\r\n    }\r\n\r\n    return (\r\n\r\n        // só abre o Dialog caso deputadoId seja alterado para um valor diferente de vazio\r\n\r\n        <div>\r\n\r\n            <Dialog fullScreen open={(deputadoId !== '') ? true : false} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\" className={classes.title}>\r\n                            Cota parlamentar\r\n                        </Typography>\r\n                        <Avatar alt={escolhido.nome} src={escolhido.urlFoto} className={classes.avatar} />\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            {escolhido.nome} ({escolhido.siglaUf}) - {escolhido.siglaPartido}\r\n                        </Typography>\r\n                        {\r\n                            !isLoading && \r\n                            <Button autoFocus color=\"inherit\" onClick={showPie}><PieChartIcon /> Gráfico</Button>\r\n                        }\r\n                        <Button autoFocus color=\"inherit\" onClick={handleClose}><CloseIcon /> Fechar</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {\r\n                    isLoading &&\r\n                    <Loading />\r\n                }\r\n\r\n                {\r\n                    erro.length > 0 &&\r\n                    <Alert severity=\"error\" className={classes.alert}>{erro}</Alert>\r\n                }\r\n\r\n                {\r\n                    !isLoading && erro.length === 0 &&\r\n                    <>\r\n\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label='Registros de pagamentos e reembolsos da cota parlamentar' size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Data</TableCell>\r\n                                        <TableCell>Fornecedor</TableCell>\r\n                                        <TableCell>CNPJ</TableCell>\r\n                                        <TableCell>Tipo Despesa</TableCell>\r\n                                        <TableCell>Tipo Documento</TableCell>\r\n                                        <TableCell>Link Documento</TableCell>\r\n                                        <TableCell>Valor Documento</TableCell>\r\n                                        <TableCell>Valor Glosa</TableCell>\r\n                                        <TableCell>Valor Líquido</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {gastos.map(g => (\r\n                                        <TableRow key={g.codDocumento}>\r\n                                            <TableCell>{g.dataDocumento}</TableCell>\r\n                                            <TableCell>{g.nomeFornecedor}</TableCell>\r\n                                            <TableCell>{g.cnpjCpfFornecedor}</TableCell>\r\n                                            <TableCell>{g.tipoDespesa}</TableCell>\r\n                                            <TableCell>{g.tipoDocumento}</TableCell>\r\n                                            <TableCell>\r\n                                                <Link href={g.urlDocumento} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">Abrir</Button>\r\n                                                </Link>\r\n                                            </TableCell>\r\n                                            <TableCell>{g.valorDocumento.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</TableCell>\r\n                                            <TableCell>{g.valorGlosa.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</TableCell>\r\n                                            <TableCell>{g.valorLiquido.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </>\r\n                }\r\n\r\n            </Dialog>\r\n            \r\n            {\r\n                isPlot && !isLoading &&\r\n                <PieDialog gastos={gastos} isPlot={isPlot} setIsPlot={setIsPlot} escolhido={escolhido} />\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles, Button, Typography } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Loading from '../components/Loading'\r\nimport SelectComponent from '../components/SelectComponent'\r\nimport DeputadoCard from '../components/DeputadoCard'\r\nimport DeputadoDetail from '../components/DeputadoDetail'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n    alert: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    root: {\r\n        margin: theme.spacing(4),\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function Gov() {\r\n\r\n    const classes = useStyles()\r\n\r\n    // states para feedback\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [erro, setErro] = useState('')\r\n\r\n    // states para apresentação de dados em tela\r\n    const [uf, setUf] = useState('Todos') // estado brasileiro selecionado no select\r\n    const [sigla, setSigla] = useState('Todos') // partido político selecionado no select\r\n    const [deputados, setDeputados] = useState([]) // dados dos deputados buscados com api (todos 513 deputados) \r\n    const [lista, setLista] = useState([]) // listagem de deputados a partir dos filtros dos selects \r\n    const [currentPage, setCurrentPage] = useState(1) // página atual, definida a partir da page de BasicPagination\r\n    const [deputadoId, setDeputadoId] = useState('') // recebe o ID do deputado para ser mostrado em detalhes\r\n\r\n    // states para filtros com selects\r\n    const [partidos, setPartidos] = useState(['Todos']) // partidos buscados com api\r\n    const estados = ['Todos', 'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO', 'DF'] // estados brasileiros\r\n    const itemsPerPage = 8 // quantidade de itens da lista em cada página apresentada\r\n\r\n\r\n    useEffect(() => { // faz chamada à API do governo, caso ainda não exista 'deputadosapi' e 'partidosapi' no localStorage\r\n\r\n        let depsLocal = JSON.parse(localStorage.getItem('deputadosapi'))\r\n        let partsLocal = JSON.parse(localStorage.getItem('partidosapi'))\r\n\r\n        if (depsLocal !== null && depsLocal.length > 0 &&\r\n            partsLocal !== null && partsLocal.length > 0) {\r\n            setDeputados(depsLocal)\r\n            setPartidos(partsLocal)\r\n        }\r\n        else {\r\n            getDadosGovAPI()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => { // atualiza listagem de cards quando 'deputados' é alterado\r\n\r\n        if (deputados.length > 0) {\r\n            updateListagem(deputados)\r\n        }\r\n\r\n    }, [deputados])\r\n\r\n\r\n    function updateListagem(values) { // gera os cards para listagem em tela, altera 'lista'\r\n\r\n        setLista(values.map(dado => (\r\n            <DeputadoCard\r\n                key={dado.id}\r\n                variant=\"contained\"\r\n                id={dado.id}\r\n                email={dado.email}\r\n                nome={dado.nome}\r\n                siglaPartido={dado.siglaPartido}\r\n                siglaUf={dado.siglaUf}\r\n                urlFoto={dado.urlFoto}\r\n                setDeputadoId={setDeputadoId}\r\n            />\r\n        )))\r\n\r\n    }\r\n\r\n    async function getDadosGovAPI() { // busca deputados e siglas dos partidos, e os coloca no localStorage\r\n\r\n        setIsLoading(true)\r\n\r\n        let depsUrl = `https://dadosabertos.camara.leg.br/api/v2/deputados?ordem=ASC&ordenarPor=nome`\r\n        let partsUrl = `https://dadosabertos.camara.leg.br/api/v2/partidos?itens=200&ordem=ASC&ordenarPor=sigla`\r\n        \r\n        await fetch(depsUrl) // deputados\r\n            .then(async response => {\r\n                await response.json().then(data => {\r\n                    setDeputados(data.dados)\r\n                    localStorage.setItem('deputadosapi', JSON.stringify(data.dados))\r\n                })\r\n            })\r\n            .catch(function (err) { setErro(err.message) })\r\n\r\n        await fetch(partsUrl) // partidos políticos\r\n            .then(async response => {\r\n                await response.json().then(data => {\r\n                    let subData = data.dados.map(d => d.sigla)\r\n                    setPartidos([...partidos, ...subData])\r\n                    localStorage.setItem('partidosapi', JSON.stringify([...partidos, ...subData]))\r\n                })\r\n            })\r\n            .catch(function (err) { setErro(err.message) })\r\n\r\n        setIsLoading(false)\r\n\r\n    }\r\n\r\n    function filtrarDadosGovAPI() { // filtragem de deputados baseada nos selects\r\n\r\n        setIsLoading(true)\r\n\r\n        if (deputados.length > 0) { // se já existirem dados de deputados\r\n\r\n            let subDados = [] // conjunto de deputados selecionados pelos filtros\r\n\r\n            if (uf === 'Todos' && sigla === 'Todos') { // sem filtros selecionados\r\n                subDados = deputados\r\n            }\r\n            else { // filtros selecionados\r\n                subDados = deputados.filter(dado => { // filtra array\r\n                    if (uf !== 'Todos' && sigla !== 'Todos') { // filtrar sigla e uf\r\n                        return dado.siglaUf === uf && dado.siglaPartido === sigla\r\n                    }\r\n                    else if (uf === 'Todos' && sigla !== 'Todos') { // filtrar apenas sigla\r\n                        return dado.siglaPartido === sigla\r\n                    }\r\n                    else if (uf !== 'Todos' && sigla === 'Todos') { // filtrar apenas uf\r\n                        return dado.siglaUf === uf\r\n                    }\r\n                })\r\n                setCurrentPage(1) // define volta para primeira página\r\n            }\r\n\r\n            updateListagem(subDados) // lista dados filtrados\r\n\r\n        }\r\n\r\n        setIsLoading(false)\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            {!isLoading && erro.length === 0 && // apresenta opções de select para filtrar deputados\r\n                <div className={classes.root}>\r\n                    <SelectComponent label={\"UF\"} menuItems={estados} value={uf} setOnChange={setUf} />\r\n                    <SelectComponent label={\"Partido\"} menuItems={partidos} value={sigla} setOnChange={setSigla} />\r\n                    <Button variant=\"outlined\" onClick={filtrarDadosGovAPI} className={classes.formControl}>Filtrar</Button>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Resultado: {lista.length} deputados(as).\r\n                    </Typography>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                isLoading && // feedback visual do processamento\r\n                <Loading />\r\n            }\r\n\r\n            {\r\n                erro.length > 0 && // apresenta erro caso exista\r\n                <Alert severity=\"error\" className={classes.alert}>{erro}</Alert>\r\n            }\r\n\r\n            {\r\n                !isLoading && lista.length > 0 && partidos.length > 1 && // >1 pois a princípio existe o 'Todos' no array\r\n                <>\r\n                    <div className={classes.root}>\r\n                        {lista.slice(currentPage*itemsPerPage-itemsPerPage, currentPage*itemsPerPage)} \r\n                    </div>\r\n                    <div className={classes.root}>\r\n                        <Pagination \r\n                            defaultPage={1} \r\n                            count={Math.ceil(lista.length/itemsPerPage)} \r\n                            color='standard' \r\n                            onChange={(event, page) => setCurrentPage(page)} \r\n                        />\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {\r\n                deputadoId !== '' && // abre o detalhe do deputado se existir um valor pra deputadoId\r\n                <DeputadoDetail deputadoId={deputadoId} setDeputadoId={setDeputadoId} deputados={deputados} />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport default function Sobre() {\r\n\r\n    return (\r\n        <>\r\n            <h2>Sobre este projeto</h2>\r\n            <h4>Frontend desenvolvido em ReactJS e Material-UI consumindo a API dos Dados Abertos da Câmara dos Deputados. </h4>\r\n\r\n            <p>Fonte de dados, API:</p>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"a\"  rel=\"noopener noreferrer\" target=\"_blank\" href='https://dadosabertos.camara.leg.br/swagger/api.html'>\r\n                https://dadosabertos.camara.leg.br/swagger/api.html\r\n            </Typography>\r\n\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Container from '@material-ui/core/Container'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport Gov from '../pages/Gov'\r\nimport Sobre from '../pages/Sobre'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            {children}\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}))\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Governo API\" {...a11yProps(0)} />\r\n          <Tab label=\"Sobre\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Gov />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Sobre />\r\n      </TabPanel>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css'\n\nimport TabPanel from './components/TabPanel'\n\nimport { createMuiTheme, responsiveFontSizes, MuiThemeProvider, Switch, FormGroup, FormControlLabel } from '@material-ui/core'\nimport { deepOrange, orange, lightBlue, blue } from '@material-ui/core/colors' // cores\nimport CssBaseLine from '@material-ui/core/CssBaseLine' // ajuste navegadores antigos\n\nexport default function App() {\n\n  const [temaDark, setTemaDark] = useState(true)\n\n  const [check, setCheck] = useState(false)\n  const tipoPaleta = temaDark ? 'dark' : 'light'\n  const corPrimaria = temaDark ? orange[500] : blue[500]\n  const corSecundaria = temaDark ? deepOrange[900] : lightBlue[400]\n  let tema = createMuiTheme({\n    palette: {\n      type: tipoPaleta,\n      primary: { main: corPrimaria },\n      secondary: { main: corSecundaria }\n    }\n  })\n  tema = responsiveFontSizes(tema) // reduz de acordo com tela\n\n  function handleTheme() {\n    setTemaDark(!temaDark)\n    setCheck(!check)\n  }\n\n  return (\n    <MuiThemeProvider theme={tema}>\n      <CssBaseLine />\n      <FormGroup style={{ 'marginLeft': '20px', 'color': 'grey' }}>\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={check} onChange={handleTheme} color=\"primary\" inputProps={{ 'aria-label': 'primary checkbox' }} />}\n          label={\"Tema \" + tipoPaleta}\n        />\n      </FormGroup>\n      <TabPanel />\n    </MuiThemeProvider>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}