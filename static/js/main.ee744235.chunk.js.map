{"version":3,"sources":["components/Loading.js","components/SelectComponent.js","components/DeputadoCard.js","components/DeputadoDetail.js","pages/Gov.js","pages/Sobre.js","components/TabPanel.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","Loading","classes","className","CircularProgress","select","margin","minWidth","SelectComponent","label","menuItems","value","setOnChange","FormControl","variant","InputLabel","id","Select","labelId","onChange","e","target","map","MenuItem","key","width","height","DeputadoCard","nome","siglaPartido","siglaUf","setDeputadoId","Card","elevation","CardActionArea","CardContent","Typography","gutterBottom","component","color","CardActions","Button","size","onClick","appBar","position","title","flex","avatar","borderRadius","Transition","React","forwardRef","props","ref","Slide","direction","DeputadoDetail","deputadoId","deputados","useState","isLoading","setIsLoading","erro","setErro","gastos","setGastos","escolhido","setEscolhido","a","deputadoIdUrl","fetch","then","response","json","data","dados","esc","filter","dep","catch","err","message","handleClose","useEffect","getGastosAPI","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","Toolbar","Avatar","alt","src","urlFoto","autoFocus","length","Alert","severity","alert","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","g","codDocumento","dataDocumento","nomeFornecedor","cnpjCpfFornecedor","tipoDespesa","tipoDocumento","Link","href","urlDocumento","rel","valorDocumento","toFixed","valorGlosa","valorLiquido","formControl","flexWrap","justifyContent","alignItems","Gov","uf","setUf","sigla","setSigla","setDeputados","lista","setLista","currentPage","setCurrentPage","partidos","setPartidos","updateListagem","values","dado","partsUrl","localStorage","setItem","JSON","stringify","subData","d","depsLocal","parse","getItem","partsLocal","getDadosGovAPI","subDados","slice","Pagination","defaultPage","count","Math","ceil","event","page","Sobre","TabPanel","children","index","other","role","hidden","aria-labelledby","Container","Box","a11yProps","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","App","temaDark","setTemaDark","check","setCheck","tipoPaleta","corPrimaria","orange","blue","corSecundaria","deepOrange","lightBlue","tema","createMuiTheme","type","primary","main","secondary","responsiveFontSizes","FormGroup","style","FormControlLabel","control","Switch","checked","inputProps","ReactDOM","render","document","getElementById"],"mappings":"oTAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT,YAAa,CACXC,WAAYH,EAAMI,QAAQ,SAKjB,SAASC,IACtB,IAAMC,EAAUR,IAEhB,OACE,yBAAKS,UAAWD,EAAQL,MACtB,kBAACO,EAAA,EAAD,O,wCCfAV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCS,OAAQ,CACJC,OAAQV,EAAMI,QAAQ,GACtBO,SAAU,SAIH,SAASC,EAAT,GAAmE,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,YAEzDV,EAAUR,IAEhB,OACI,kBAACmB,EAAA,EAAD,CAAaC,QAAQ,WAAWX,UAAWD,EAAQG,QACnD,kBAACU,EAAA,EAAD,CAAYC,GAAIP,GAAQA,GACxB,kBAACQ,EAAA,EAAD,CACIC,QAAST,EACTO,GAAIP,EACJE,MAAOA,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOV,QACpCF,MAAOA,GAENC,EAAUY,KAAI,SAAAF,GAAC,OAAI,kBAACG,EAAA,EAAD,CAAUC,IAAKJ,EAAGT,MAAOS,GAAIA,Q,wCCfvD1B,EAAYC,YAAW,CAC3BE,KAAM,CACJ4B,MAAO,IACPC,OAAQ,OAIG,SAASC,EAAT,GAA2E,IAAnDX,EAAkD,EAAlDA,GAAIY,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAEhE7B,EAAUR,IAEhB,OACE,kBAACsC,EAAA,EAAD,CAAMC,UAAW,EAAG9B,UAAWD,EAAQL,MACrC,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACvB,QAAQ,KAAKwB,UAAU,MAAMV,GACtD,kBAACQ,EAAA,EAAD,CAAYtB,QAAQ,QAAQyB,MAAM,gBAAgBD,UAAU,KAA5D,YAA0ET,GAC1E,kBAACO,EAAA,EAAD,CAAYtB,QAAQ,QAAQyB,MAAM,gBAAgBD,UAAU,KAA5D,WAAyER,KAG7E,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ3B,QAAQ,WAAW4B,KAAK,QAAQH,MAAM,UAAUI,QAAS,kBAAIZ,EAAcf,KAAnF,sB,gICtBFtB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgD,OAAQ,CACJC,SAAU,YAEdC,MAAO,CACH/C,WAAYH,EAAMI,QAAQ,GAC1B+C,KAAM,GAEVC,OAAQ,CACJC,aAAc,MACdxB,MAAO7B,EAAMI,QAAQ,GACrB0B,OAAQ9B,EAAMI,QAAQ,QAIxBkD,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGhC,SAASI,EAAT,GAAmE,IAAzCC,EAAwC,EAAxCA,WAAY3B,EAA4B,EAA5BA,cAAe4B,EAAa,EAAbA,UAE1DzD,EAAUR,IAF6D,EAI3CkE,oBAAS,GAJkC,mBAItEC,EAJsE,KAI3DC,EAJ2D,OAKrDF,mBAAS,IAL4C,mBAKtEG,EALsE,KAKhEC,EALgE,OAMjDJ,mBAAS,IANwC,mBAMtEK,EANsE,KAM9DC,EAN8D,OAO3CN,mBAAS,IAPkC,mBAOtEO,EAPsE,KAO3DC,EAP2D,iDAe7E,WAA4BV,GAA5B,eAAAW,EAAA,yDAEuB,KAAfX,EAFR,wDAOQI,GAAa,GACbE,EAAQ,IAEJM,EAVZ,8DAUmFZ,EAVnF,+CAYca,MAAMD,GACPE,KADC,uCACI,WAAMC,GAAN,SAAAJ,EAAA,sEACII,EAASC,OAAOF,MAAK,SAAAG,GACvBT,EAAUS,EAAKC,OACf,IAAIC,EAAMlB,EAAUmB,QAAO,SAAAC,GAAG,OAAIA,EAAI/D,KAAO0C,KAAY,GACzDU,EAAaS,MAJf,2CADJ,uDAQDG,OAAM,SAAUC,GAAOjB,EAAQiB,EAAIC,YApBhD,OAsBQpB,GAAa,GAtBrB,6CAf6E,sBA2C7E,SAASqB,IAELpD,EAAc,IACdqC,EAAa,IAIjB,OAzCAgB,qBAAU,YATmE,oCAWzEC,CAAa3B,KAEd,CAACA,IAyCA,6BAEI,kBAAC4B,EAAA,EAAD,CAAQC,YAAU,EAACC,KAAsB,KAAf9B,EAAmC+B,QAASN,EAAaO,oBAAqBxC,GACpG,kBAACyC,EAAA,EAAD,CAAQxF,UAAWD,EAAQ0C,QACvB,kBAACgD,EAAA,EAAD,KACI,kBAACxD,EAAA,EAAD,CAAYtB,QAAQ,KAAKX,UAAWD,EAAQ4C,OAA5C,oBAGA,kBAAC+C,EAAA,EAAD,CAAQC,IAAK3B,EAAUvC,KAAMmE,IAAK5B,EAAU6B,QAAS7F,UAAWD,EAAQ8C,SACxE,kBAACZ,EAAA,EAAD,CAAYtB,QAAQ,KAAKX,UAAWD,EAAQ4C,OACvCqB,EAAUvC,KADf,KACuBuC,EAAUrC,QADjC,OAC8CqC,EAAUtC,cAExD,kBAACY,EAAA,EAAD,CAAQwD,WAAS,EAAC1D,MAAM,UAAUI,QAASwC,GAAa,kBAAC,IAAD,MAAxD,aAKJtB,GACA,kBAAC5D,EAAD,MAIA8D,EAAKmC,OAAS,GACd,kBAACC,EAAA,EAAD,CAAOC,SAAS,QAAQjG,UAAWD,EAAQmG,OAAQtC,IAIlDF,GAA6B,IAAhBE,EAAKmC,QACnB,oCAEI,kBAACI,EAAA,EAAD,CAAgBhE,UAAWiE,KACvB,kBAACC,EAAA,EAAD,CAAOC,aAAW,2DAA2D/D,KAAK,SAC9E,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,6BACA,kBAACA,EAAA,EAAD,yBACA,kBAACA,EAAA,EAAD,gCAGR,kBAACC,EAAA,EAAD,KACK5C,EAAO3C,KAAI,SAAAwF,GAAC,OACT,kBAACH,EAAA,EAAD,CAAUnF,IAAKsF,EAAEC,cACb,kBAACH,EAAA,EAAD,KAAYE,EAAEE,eACd,kBAACJ,EAAA,EAAD,KAAYE,EAAEG,gBACd,kBAACL,EAAA,EAAD,KAAYE,EAAEI,mBACd,kBAACN,EAAA,EAAD,KAAYE,EAAEK,aACd,kBAACP,EAAA,EAAD,KAAYE,EAAEM,eACd,kBAACR,EAAA,EAAD,KACI,kBAACS,EAAA,EAAD,CAAMC,KAAMR,EAAES,aAAclG,OAAO,SAASmG,IAAI,uBAC5C,kBAAC/E,EAAA,EAAD,CAAQC,KAAK,QAAQ5B,QAAQ,YAAYyB,MAAM,WAA/C,WAGR,kBAACqE,EAAA,EAAD,KAAYE,EAAEW,eAAeC,QAAQ,IACrC,kBAACd,EAAA,EAAD,KAAYE,EAAEa,WAAWD,QAAQ,IACjC,kBAACd,EAAA,EAAD,KAAYE,EAAEc,aAAaF,QAAQ,c,cCnIzEhI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiI,YAAa,CACTvH,OAAQV,EAAMI,QAAQ,GACtBO,SAAU,KAEd8F,MAAO,CACH/F,OAAQV,EAAMI,QAAQ,IAE1BH,KAAM,CACFS,OAAQV,EAAMI,QAAQ,GACtBF,QAAS,OACTgI,SAAU,OACVC,eAAgB,SAChBC,WAAY,SACZ,QAAS,CACL1H,OAAQV,EAAMI,QAAQ,SAKnB,SAASiI,KAEpB,IAAM/H,EAAUR,KAFU,EAKQkE,oBAAS,GALjB,mBAKnBC,EALmB,KAKRC,EALQ,OAMFF,mBAAS,IANP,mBAMnBG,EANmB,KAMbC,EANa,OASNJ,mBAAS,SATH,mBASnBsE,EATmB,KASfC,EATe,OAUAvE,mBAAS,SAVT,mBAUnBwE,EAVmB,KAUZC,EAVY,OAWQzE,mBAAS,IAXjB,mBAWnBD,EAXmB,KAWR2E,EAXQ,OAYA1E,mBAAS,IAZT,mBAYnB2E,EAZmB,KAYZC,EAZY,OAaY5E,mBAAS,GAbrB,mBAanB6E,EAbmB,KAaNC,EAbM,OAcU9E,mBAAS,IAdnB,mBAcnBF,EAdmB,KAcP3B,EAdO,OAiBM6B,mBAAS,CAAC,UAjBhB,mBAiBnB+E,EAjBmB,KAiBTC,EAjBS,KA8C1B,SAASC,EAAeC,GAEpBN,EAASM,EAAOxH,KAAI,SAAAyH,GAAI,OACpB,kBAACpH,EAAD,CACIH,IAAKuH,EAAK/H,GACVF,QAAQ,YACRE,GAAI+H,EAAK/H,GACTY,KAAMmH,EAAKnH,KACXC,aAAckH,EAAKlH,aACnBC,QAASiH,EAAKjH,QACdkE,QAAS+C,EAAK/C,QACdjE,cAAeA,QAzDD,4CA+D1B,4BAAAsC,EAAA,6DAEIP,GAAa,GAFjB,gFAKQkF,EALR,mGAOUzE,MAPV,iFAQSC,KADC,uCACI,WAAMC,GAAN,SAAAJ,EAAA,sEACII,EAASC,OAAOF,MAAK,SAAAG,GACvB2D,EAAa3D,EAAKC,OAClBqE,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUzE,EAAKC,WAH3D,2CADJ,uDAODI,OAAM,SAAUC,GAAOjB,EAAQiB,EAAIC,YAd5C,uBAgBUX,MAAMyE,GACPxE,KADC,uCACI,WAAMC,GAAN,SAAAJ,EAAA,sEACII,EAASC,OAAOF,MAAK,SAAAG,GACvB,IAAI0E,EAAU1E,EAAKC,MAAMtD,KAAI,SAAAgI,GAAC,OAAIA,EAAElB,SACpCQ,EAAY,GAAD,mBAAKD,GAAL,YAAkBU,KAC7BJ,aAAaC,QAAQ,cAAeC,KAAKC,UAAL,sBAAmBT,GAAnB,YAAgCU,SAJtE,2CADJ,uDAQDrE,OAAM,SAAUC,GAAOjB,EAAQiB,EAAIC,YAxB5C,OA0BIpB,GAAa,GA1BjB,4CA/D0B,sBAgI1B,OA1GAsB,qBAAU,WAEN,IAAImE,EAAYJ,KAAKK,MAAMP,aAAaQ,QAAQ,iBAC5CC,EAAaP,KAAKK,MAAMP,aAAaQ,QAAQ,gBAE/B,OAAdF,GAAsBA,EAAUrD,OAAS,GAC1B,OAAfwD,GAAuBA,EAAWxD,OAAS,GAC3CoC,EAAaiB,GACbX,EAAYc,IA9BM,mCAiClBC,KAEL,IAEHvE,qBAAU,WAEFzB,EAAUuC,OAAS,GACnB2C,EAAelF,KAGpB,CAACA,IAsFA,qCACME,GAA6B,IAAhBE,EAAKmC,QAChB,yBAAK/F,UAAWD,EAAQL,MACpB,kBAACW,EAAD,CAAiBC,MAAO,KAAMC,UAlH9B,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAkHpHC,MAAOuH,EAAItH,YAAauH,IAC1E,kBAAC3H,EAAD,CAAiBC,MAAO,UAAWC,UAAWiI,EAAUhI,MAAOyH,EAAOxH,YAAayH,IACnF,kBAAC5F,EAAA,EAAD,CAAQ3B,QAAQ,WAAW6B,QAzC3C,WAII,GAFAmB,GAAa,GAETH,EAAUuC,OAAS,EAAG,CAEtB,IAAI0D,EAAW,GAEJ,UAAP1B,GAA4B,UAAVE,EAClBwB,EAAWjG,GAGXiG,EAAWjG,EAAUmB,QAAO,SAAAiE,GACxB,MAAW,UAAPb,GAA4B,UAAVE,EACXW,EAAKjH,UAAYoG,GAAMa,EAAKlH,eAAiBuG,EAExC,UAAPF,GAA4B,UAAVE,EAChBW,EAAKlH,eAAiBuG,EAEjB,UAAPF,GAA4B,UAAVE,EAChBW,EAAKjH,UAAYoG,OADvB,KAITQ,EAAe,IAGnBG,EAAee,GAInB9F,GAAa,IAWuD3D,UAAWD,EAAQ2H,aAA3E,WACA,kBAACzF,EAAA,EAAD,CAAYtB,QAAQ,QAAQyB,MAAM,gBAAgBD,UAAU,KAA5D,cACgBiG,EAAMrC,OADtB,oBAOJrC,GACA,kBAAC5D,EAAD,MAIA8D,EAAKmC,OAAS,GACd,kBAACC,EAAA,EAAD,CAAOC,SAAS,QAAQjG,UAAWD,EAAQmG,OAAQtC,IAIlDF,GAAa0E,EAAMrC,OAAS,GAAKyC,EAASzC,OAAS,GACpD,oCACI,yBAAK/F,UAAWD,EAAQL,MACnB0I,EAAMsB,MAxIN,EAwIYpB,EAxIZ,IAwImDA,IAExD,yBAAKtI,UAAWD,EAAQL,MACpB,kBAACiK,GAAA,EAAD,CACIC,YAAa,EACbC,MAAOC,KAAKC,KAAK3B,EAAMrC,OA7I1B,GA8IG3D,MAAM,WACNpB,SAAU,SAACgJ,EAAOC,GAAR,OAAiB1B,EAAe0B,QAOvC,KAAf1G,GACA,kBAACD,EAAD,CAAgBC,WAAYA,EAAY3B,cAAeA,EAAe4B,UAAWA,KCtMlF,SAAS0G,KAEpB,OACI,oCACI,kDACA,8IACA,wCACA,4BACI,kLACA,iHACA,kGACA,sFACA,0EACA,gGAEJ,mDACA,uBAAG/C,KAAK,sDAAsDE,IAAI,sBAAsBnG,OAAO,UAA/F,wDCNZ,SAASiJ,GAASjH,GAAQ,IAChBkH,EAAqClH,EAArCkH,SAAU5J,EAA2B0C,EAA3B1C,MAAO6J,EAAoBnH,EAApBmH,MAAUC,EADZ,YACsBpH,EADtB,8BAGvB,OACE,uCACEqH,KAAK,WACLC,OAAQhK,IAAU6J,EAClBxJ,GAAE,mCAA8BwJ,GAChCI,kBAAA,8BAAwCJ,IACpCC,GAEH9J,IAAU6J,GACT,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGP,KAcb,SAASQ,GAAUP,GACjB,MAAO,CACLxJ,GAAG,uBAAD,OAAyBwJ,GAC3B,gBAAgB,4BAAhB,OAA6CA,IAIjD,IAAM9K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmL,SAAU,EACVvJ,MAAO,OACPwJ,gBAAiBrL,EAAMsL,QAAQC,WAAWC,WAI/B,SAASC,KACtB,IAAMnL,EAAUR,KADiC,EAEvBkE,mBAAS,GAFc,mBAE1CjD,EAF0C,KAEnC2K,EAFmC,KAQjD,OACE,yBAAKnL,UAAWD,EAAQL,MAEtB,kBAAC8F,EAAA,EAAD,CAAQ9C,SAAS,SAASN,MAAM,WAC9B,kBAACgJ,EAAA,EAAD,CACE5K,MAAOA,EACPQ,SAVa,SAACgJ,EAAOqB,GAC3BF,EAASE,IAUHC,eAAe,UACfC,UAAU,UACV5K,QAAQ,aACR6K,cAAc,OACdlF,aAAW,gCAEX,kBAACmF,EAAA,EAAD,eAAKnL,MAAM,eAAkBsK,GAAU,KACvC,kBAACa,EAAA,EAAD,eAAKnL,MAAM,SAAYsK,GAAU,OAIrC,kBAACT,GAAD,CAAU3J,MAAOA,EAAO6J,MAAO,GAC7B,kBAACvC,GAAD,OAGF,kBAACqC,GAAD,CAAU3J,MAAOA,EAAO6J,MAAO,GAC7B,kBAACH,GAAD,Q,+GC7EO,SAASwB,KAAO,IAAD,EAEIjI,oBAAS,GAFb,mBAErBkI,EAFqB,KAEXC,EAFW,OAIFnI,oBAAS,GAJP,mBAIrBoI,EAJqB,KAIdC,EAJc,KAKtBC,EAAaJ,EAAW,OAAS,QACjCK,EAAcL,EAAWM,KAAO,KAAOC,KAAK,KAC5CC,EAAgBR,EAAWS,KAAW,KAAOC,KAAU,KACzDC,EAAOC,aAAe,CACxBxB,QAAS,CACPyB,KAAMT,EACNU,QAAS,CAAEC,KAAMV,GACjBW,UAAW,CAAED,KAAMP,MAUvB,OAPAG,EAAOM,aAAoBN,GAQzB,kBAAC,KAAD,CAAkB7M,MAAO6M,GACvB,kBAAC,KAAD,MACA,kBAACO,GAAA,EAAD,CAAWC,MAAO,CAAE,WAAc,OAAQ,MAAS,SACjD,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAQ1K,KAAK,QAAQ2K,QAASrB,EAAO7K,SAVtD,WACE4K,GAAaD,GACbG,GAAUD,IAQiEzJ,MAAM,UAAU+K,WAAY,CAAE,aAAc,sBACjH7M,MAAO,QAAUyL,KAGrB,kBAAC,GAAD,OCpCNqB,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ee744235.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { makeStyles, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\nexport default function SelectComponent({ label, menuItems, value, setOnChange }){\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <FormControl variant=\"outlined\" className={classes.select}>\r\n        <InputLabel id={label}>{label}</InputLabel>\r\n        <Select\r\n            labelId={label}\r\n            id={label}\r\n            value={value}\r\n            onChange={e => setOnChange(e.target.value)}\r\n            label={label}\r\n        >\r\n            {menuItems.map(e => <MenuItem key={e} value={e}>{e}</MenuItem>)}\r\n        </Select>\r\n    </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    height: 200,\r\n  },\r\n})\r\n\r\nexport default function DeputadoCard({ id, nome, siglaPartido, siglaUf, setDeputadoId }) {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card elevation={3} className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">{nome}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Partido: {siglaPartido}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Estado: {siglaUf}</Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={()=>setDeputadoId(id)}>Cota parlamentar</Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, Dialog, AppBar, Toolbar, Typography, Slide, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper, Link, Avatar } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Loading from '../components/Loading'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    avatar: {\r\n        borderRadius: '50%',\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function DeputadoDetail({ deputadoId, setDeputadoId, deputados }) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [erro, setErro] = useState('')\r\n    const [gastos, setGastos] = useState([])\r\n    const [escolhido, setEscolhido] = useState('')\r\n\r\n    useEffect(() => { // executa busca na api sempre que deputadoId mudar\r\n\r\n        getGastosAPI(deputadoId)\r\n\r\n    }, [deputadoId])\r\n\r\n    async function getGastosAPI(deputadoId) { // busca os gastos do deputadoId\r\n\r\n        if (deputadoId === '') {\r\n            return\r\n        }\r\n        else {\r\n\r\n            setIsLoading(true)\r\n            setErro('')\r\n\r\n            let deputadoIdUrl = `https://dadosabertos.camara.leg.br/api/v2/deputados/${deputadoId}/despesas?ordem=ASC&ordenarPor=ano`\r\n\r\n            await fetch(deputadoIdUrl)\r\n                .then(async response => {\r\n                    await response.json().then(data => {\r\n                        setGastos(data.dados) // gastos do deputadoId\r\n                        let esc = deputados.filter(dep => dep.id === deputadoId)[0] // deputadoId em questão\r\n                        setEscolhido(esc)\r\n                    })\r\n                })\r\n                .catch(function (err) { setErro(err.message) })\r\n\r\n            setIsLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function handleClose() { // limpa\r\n\r\n        setDeputadoId('')\r\n        setEscolhido('')\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        // só abre o Dialog caso deputadoId seja alterado para um valor diferente de vazio\r\n\r\n        <div>\r\n\r\n            <Dialog fullScreen open={(deputadoId !== '') ? true : false} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\" className={classes.title}>\r\n                            Cota parlamentar\r\n                        </Typography>\r\n                        <Avatar alt={escolhido.nome} src={escolhido.urlFoto} className={classes.avatar} />\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            {escolhido.nome} ({escolhido.siglaUf}) - {escolhido.siglaPartido}\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleClose}><CloseIcon /> Fechar</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {\r\n                    isLoading &&\r\n                    <Loading />\r\n                }\r\n\r\n                {\r\n                    erro.length > 0 &&\r\n                    <Alert severity=\"error\" className={classes.alert}>{erro}</Alert>\r\n                }\r\n\r\n                {\r\n                    !isLoading && erro.length === 0 &&\r\n                    <>\r\n\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label='Registros de pagamentos e reembolsos da cota parlamentar' size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Data</TableCell>\r\n                                        <TableCell>Fornecedor</TableCell>\r\n                                        <TableCell>CNPJ</TableCell>\r\n                                        <TableCell>Tipo Despesa</TableCell>\r\n                                        <TableCell>Tipo Documento</TableCell>\r\n                                        <TableCell>Link Documento</TableCell>\r\n                                        <TableCell>Valor Documento (R$)</TableCell>\r\n                                        <TableCell>Valor Glosa (R$)</TableCell>\r\n                                        <TableCell>Valor Líquido (R$)</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {gastos.map(g => (\r\n                                        <TableRow key={g.codDocumento}>\r\n                                            <TableCell>{g.dataDocumento}</TableCell>\r\n                                            <TableCell>{g.nomeFornecedor}</TableCell>\r\n                                            <TableCell>{g.cnpjCpfFornecedor}</TableCell>\r\n                                            <TableCell>{g.tipoDespesa}</TableCell>\r\n                                            <TableCell>{g.tipoDocumento}</TableCell>\r\n                                            <TableCell>\r\n                                                <Link href={g.urlDocumento} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                    <Button size=\"small\" variant=\"contained\" color=\"primary\">Abrir</Button>\r\n                                                </Link>\r\n                                            </TableCell>\r\n                                            <TableCell>{g.valorDocumento.toFixed(2)}</TableCell>\r\n                                            <TableCell>{g.valorGlosa.toFixed(2)}</TableCell>\r\n                                            <TableCell>{g.valorLiquido.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </>\r\n                }\r\n\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles, Button, Typography } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Loading from '../components/Loading'\r\nimport SelectComponent from '../components/SelectComponent'\r\nimport DeputadoCard from '../components/DeputadoCard'\r\nimport DeputadoDetail from '../components/DeputadoDetail'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(4),\r\n        minWidth: 120,\r\n    },\r\n    alert: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    root: {\r\n        margin: theme.spacing(4),\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function Gov() {\r\n\r\n    const classes = useStyles()\r\n\r\n    // states para feedback\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [erro, setErro] = useState('')\r\n\r\n    // states para apresentação de dados em tela\r\n    const [uf, setUf] = useState('Todos') // estado brasileiro selecionado no select\r\n    const [sigla, setSigla] = useState('Todos') // partido político selecionado no select\r\n    const [deputados, setDeputados] = useState([]) // dados dos deputados buscados com api (todos 513 deputados) \r\n    const [lista, setLista] = useState([]) // listagem de deputados a partir dos filtros dos selects \r\n    const [currentPage, setCurrentPage] = useState(1) // página atual, definida a partir da page de BasicPagination\r\n    const [deputadoId, setDeputadoId] = useState('') // recebe o ID do deputado para ser mostrado em detalhes\r\n\r\n    // states para filtros com selects\r\n    const [partidos, setPartidos] = useState(['Todos']) // partidos buscados com api\r\n    const estados = ['Todos', 'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO', 'DF'] // estados brasileiros\r\n    const itemsPerPage = 8 // quantidade de itens da lista em cada página apresentada\r\n\r\n\r\n    useEffect(() => { // faz chamada à API do governo, caso ainda não exista 'deputadosapi' e 'partidosapi' no localStorage\r\n\r\n        let depsLocal = JSON.parse(localStorage.getItem('deputadosapi'))\r\n        let partsLocal = JSON.parse(localStorage.getItem('partidosapi'))\r\n\r\n        if (depsLocal !== null && depsLocal.length > 0 &&\r\n            partsLocal !== null && partsLocal.length > 0) {\r\n            setDeputados(depsLocal)\r\n            setPartidos(partsLocal)\r\n        }\r\n        else {\r\n            getDadosGovAPI()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => { // atualiza listagem de cards quando 'deputados' é alterado\r\n\r\n        if (deputados.length > 0) {\r\n            updateListagem(deputados)\r\n        }\r\n\r\n    }, [deputados])\r\n\r\n\r\n    function updateListagem(values) { // gera os cards para listagem em tela, altera 'lista'\r\n\r\n        setLista(values.map(dado => (\r\n            <DeputadoCard\r\n                key={dado.id}\r\n                variant=\"contained\"\r\n                id={dado.id}\r\n                nome={dado.nome}\r\n                siglaPartido={dado.siglaPartido}\r\n                siglaUf={dado.siglaUf}\r\n                urlFoto={dado.urlFoto}\r\n                setDeputadoId={setDeputadoId}\r\n            />\r\n        )))\r\n\r\n    }\r\n\r\n    async function getDadosGovAPI() { // busca deputados e siglas dos partidos, e os coloca no localStorage\r\n\r\n        setIsLoading(true)\r\n\r\n        let depsUrl = `https://dadosabertos.camara.leg.br/api/v2/deputados?ordem=ASC&ordenarPor=nome`\r\n        let partsUrl = `https://dadosabertos.camara.leg.br/api/v2/partidos?itens=200&ordem=ASC&ordenarPor=sigla`\r\n\r\n        await fetch(depsUrl) // deputados\r\n            .then(async response => {\r\n                await response.json().then(data => {\r\n                    setDeputados(data.dados)\r\n                    localStorage.setItem('deputadosapi', JSON.stringify(data.dados))\r\n                })\r\n            })\r\n            .catch(function (err) { setErro(err.message) })\r\n\r\n        await fetch(partsUrl) // partidos políticos\r\n            .then(async response => {\r\n                await response.json().then(data => {\r\n                    let subData = data.dados.map(d => d.sigla)\r\n                    setPartidos([...partidos, ...subData])\r\n                    localStorage.setItem('partidosapi', JSON.stringify([...partidos, ...subData]))\r\n                })\r\n            })\r\n            .catch(function (err) { setErro(err.message) })\r\n\r\n        setIsLoading(false)\r\n\r\n    }\r\n\r\n    function filtrarDadosGovAPI() { // filtragem de deputados baseada nos selects\r\n\r\n        setIsLoading(true)\r\n\r\n        if (deputados.length > 0) { // se já existirem dados de deputados\r\n\r\n            let subDados = [] // conjunto de deputados selecionados pelos filtros\r\n\r\n            if (uf === 'Todos' && sigla === 'Todos') { // sem filtros selecionados\r\n                subDados = deputados\r\n            }\r\n            else { // filtros selecionados\r\n                subDados = deputados.filter(dado => { // filtra array\r\n                    if (uf !== 'Todos' && sigla !== 'Todos') { // filtrar sigla e uf\r\n                        return dado.siglaUf === uf && dado.siglaPartido === sigla\r\n                    }\r\n                    else if (uf === 'Todos' && sigla !== 'Todos') { // filtrar apenas sigla\r\n                        return dado.siglaPartido === sigla\r\n                    }\r\n                    else if (uf !== 'Todos' && sigla === 'Todos') { // filtrar apenas uf\r\n                        return dado.siglaUf === uf\r\n                    }\r\n                })\r\n                setCurrentPage(1) // define volta para primeira página\r\n            }\r\n\r\n            updateListagem(subDados) // lista dados filtrados\r\n\r\n        }\r\n\r\n        setIsLoading(false)\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            {!isLoading && erro.length === 0 && // apresenta opções de select para filtrar deputados\r\n                <div className={classes.root}>\r\n                    <SelectComponent label={\"UF\"} menuItems={estados} value={uf} setOnChange={setUf} />\r\n                    <SelectComponent label={\"Partido\"} menuItems={partidos} value={sigla} setOnChange={setSigla} />\r\n                    <Button variant=\"outlined\" onClick={filtrarDadosGovAPI} className={classes.formControl}>Filtrar</Button>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Resultado: {lista.length} deputados(as).\r\n                    </Typography>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                isLoading && // feedback visual do processamento\r\n                <Loading />\r\n            }\r\n\r\n            {\r\n                erro.length > 0 && // apresenta erro caso exista\r\n                <Alert severity=\"error\" className={classes.alert}>{erro}</Alert>\r\n            }\r\n\r\n            {\r\n                !isLoading && lista.length > 0 && partidos.length > 1 && // >1 pois a princípio existe o 'Todos' no array\r\n                <>\r\n                    <div className={classes.root}>\r\n                        {lista.slice(currentPage*itemsPerPage-itemsPerPage, currentPage*itemsPerPage)} \r\n                    </div>\r\n                    <div className={classes.root}>\r\n                        <Pagination \r\n                            defaultPage={1} \r\n                            count={Math.ceil(lista.length/itemsPerPage)} \r\n                            color='standard' \r\n                            onChange={(event, page) => setCurrentPage(page)} \r\n                        />\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {\r\n                deputadoId !== '' && // abre o detalhe do deputado se existir um valor pra deputadoId\r\n                <DeputadoDetail deputadoId={deputadoId} setDeputadoId={setDeputadoId} deputados={deputados} />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Sobre(){\r\n\r\n    return(\r\n        <>\r\n            <h2>Sobre este projeto</h2>\r\n            <h4>Frontend desenvolvido em ReactJS e Material-UI consumindo a API dos Dados Abertos da Câmara dos Deputados. </h4>\r\n            <p>Em breve:</p>\r\n            <ul>\r\n                <li>Geração de gráficos a partir dos registros de pagamentos e reembolsos da \"cota parlamentar\" para cada deputado, para os últimos 4 anos</li>\r\n                <li>Listagem em tabela desses registros para cada deputado, para os últimos 4 anos</li>\r\n                <li>... atualmente a tabela apresenta registros dos últimos 6 meses</li>\r\n                <li>Alguns links para notas fiscais estão quebrados (?)</li>\r\n                <li>Gerar relatório em PDF sobre o deputado</li>\r\n                <li>Melhorar desempenho na renderização dos cards (513 cards)</li>\r\n            </ul>\r\n            <p>Fonte de dados, API:</p>\r\n            <a href='https://dadosabertos.camara.leg.br/swagger/api.html' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                https://dadosabertos.camara.leg.br/swagger/api.html\r\n            </a>        \r\n        </>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Container from '@material-ui/core/Container'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport Gov from '../pages/Gov'\r\nimport Sobre from '../pages/Sobre'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            {children}\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}))\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Governo API\" {...a11yProps(0)} />\r\n          <Tab label=\"Sobre\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Gov />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Sobre />\r\n      </TabPanel>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css'\n\nimport TabPanel from './components/TabPanel'\n\nimport { createMuiTheme, responsiveFontSizes, MuiThemeProvider, Switch, FormGroup, FormControlLabel } from '@material-ui/core'\nimport { deepOrange, orange, lightBlue, blue } from '@material-ui/core/colors' // cores\nimport CssBaseLine from '@material-ui/core/CssBaseLine' // ajuste navegadores antigos\n\nexport default function App() {\n\n  const [temaDark, setTemaDark] = useState(true)\n\n  const [check, setCheck] = useState(false)\n  const tipoPaleta = temaDark ? 'dark' : 'light'\n  const corPrimaria = temaDark ? orange[500] : blue[500]\n  const corSecundaria = temaDark ? deepOrange[900] : lightBlue[400]\n  let tema = createMuiTheme({\n    palette: {\n      type: tipoPaleta,\n      primary: { main: corPrimaria },\n      secondary: { main: corSecundaria }\n    }\n  })\n  tema = responsiveFontSizes(tema) // reduz de acordo com tela\n\n  function handleTheme() {\n    setTemaDark(!temaDark)\n    setCheck(!check)\n  }\n\n  return (\n    <MuiThemeProvider theme={tema}>\n      <CssBaseLine />\n      <FormGroup style={{ 'marginLeft': '20px', 'color': 'grey' }}>\n        <FormControlLabel\n          control={<Switch size=\"small\" checked={check} onChange={handleTheme} color=\"primary\" inputProps={{ 'aria-label': 'primary checkbox' }} />}\n          label={\"Tema \" + tipoPaleta}\n        />\n      </FormGroup>\n      <TabPanel />\n    </MuiThemeProvider>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}